Legend:
/////////////////// = commented out block

reasons for coding style:

1. symbol names:
	not going to use:
some-weird-multi-word-symbol
	but instead
some_weird_multi_word_symbol

	because the latter can be double cliked (in eclipse/ccw) to be fully selected
	instead of the former getting only one of those words selected.

2. fail-fast system
basically, test for (both at compile time and runtime)errors and fail as soon as they're encountered
 this should propagate the exception but most importantly I'd catch bugs as soon as they occur 
 rather than later in different piece of code 

3. new-ing java classes should be:
(new ClassName ctor_params)
	instead of 
(ClassName. ctor_params)

	because it's clearer!
	
	
4. don't use with-test
;XXX: with-test is bad when modifying the defined func/macro and 
;it fails on reload (ctrl+alt+L) the old version will be used in 
;tests and never reloaded unless repl restart
so basically, split the def and deftest so they're siblings

///////////////////
5. defalias will require repl restart or a command to remove the current alias
ie.
(ns runtime.testengine
  (:refer clojure.test :exclude [deftest is])
  (:use flatland.useful.ns); :only defalias)
  )

(defalias deftest clojure.test/deftest)
(defalias is clojure.test/is)

imagine you had to add "is" only after you ran the above code with only "deftest"
you'll get some error like:
IllegalStateException is already refers to: #'clojure.test/is in namespace: runtime.testengine  clojure.lang.Namespace.warnOrFailOnReplace (Namespace.java:88)

well actually this was worked-aroung by:
(defmacro defalias 
  [dst src]
  `(do 
     (ns-unalias *ns* '~dst)
     (flatland.useful.ns/defalias ~dst ~src)
     )
  )
///////////////////
  
6. use as less namespaces as you can, to avoid having to go thru hoops when cyclic deps happen

7. cannot use
(:refer clojure.test )
then 
(ns-unmap *ns* 'deftest)
(defmacro deftest [& all]

and from another namespace have 
(:use runtime.q :reload-all)
because it gives:
IllegalStateException deftest already refers to: #'runtime.q/deftest in namespace: runtime.q_test  clojure.lang.Namespace.warnOrFailOnReplace (Namespace.java:88)

so, have to use:
(:refer clojure.test :exclude [deftest is])
without ns-unmap
(defmacro deftest [& all]
and from another namespace have 
(:use runtime.q :reload-all)
just as before, will work on any number of reloads of this namespace (ctrl+alt+L)

